name: explore-with-me

networks:

  default:
    name: explore-with-me-default-network

services:

  main-service:
    image: explore-with-me/main
    build: main-service
    depends_on:
      main-db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://main-db:5432/ewm
      - SPRING_DATASOURCE_USERNAME=ewm
      - SPRING_DATASOURCE_PASSWORD=ewm
      - STATS_SERVER_URI=http://stats-service:9090
    volumes:
      - explore-with-me-logs:/logs:rw
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

  main-db:
    image: postgres:16.1
    ports:
      - "7654:5432"
    environment:
      - POSTGRES_DB=ewm
      - POSTGRES_USER=ewm
      - POSTGRES_PASSWORD=ewm
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  stats-service:
    image: explore-with-me/stats
    build: stats/stats-service
    ports:
      - "9090:9090"
    depends_on:
      stats-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stats-db:5432/ewm_stats
      - SPRING_DATASOURCE_USERNAME=stats
      - SPRING_DATASOURCE_PASSWORD=stats
    volumes:
      - explore-with-me-logs:/logs:rw
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s

  stats-db:
    image: postgres:16.1
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_DB=ewm_stats
      - POSTGRES_USER=stats
      - POSTGRES_PASSWORD=stats
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.24
    ports:
      - "25826:25826"
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    restart: on-failure
    depends_on:
      - elasticsearch
    command: bash -c "bin/logstash-plugin install logstash-filter-json_encode && logstash"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.24
    volumes:
      - ./filebeat/filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat-data:/usr/share/filebeat/data:rw
      - explore-with-me-logs:/logs:ro
    restart: on-failure
    depends_on:
      - logstash

volumes:

  explore-with-me-logs:
    driver: local

  elasticsearch-data:
    driver: local

  filebeat-data:
    driver: local
